plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt' // Kotlin Annotation Processor
    id 'androidx.navigation.safeargs' // Jetpack Navigation SafeArgs
    id 'dagger.hilt.android.plugin' // Dagger Hilt for Dependency Injection
}

android {
    compileSdk rootProject.COMPILE_SDK

    defaultConfig {
        applicationId "com.jxareas.petfinder"
        minSdk rootProject.MIN_SDK
        targetSdk rootProject.TARGET_SDK
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    // Kotlin Extensions
    implementation "androidx.core:core-ktx:$ktx"

    // Support Testing Dependencies
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$junit_androidx"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_androidx"

    // Support Libraries
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"

    // Testing Libraries
    testImplementation "org.robolectric:robolectric:$robolectric"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver"
    testImplementation "org.mockito:mockito-core:$mockito"
    testImplementation "com.google.truth:truth:$google_truth"
    androidTestImplementation "com.google.truth:truth:$google_truth"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$moshi_converter"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okHttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi"

    // Lifecycle Extensions
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ext"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ext"

    // ROOM
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"
    kapt "androidx.room:room-compiler:$room"
    testImplementation "androidx.room:room-testing:$room"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigation"

    // Dagger-Hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt"

    // Three Ten Android Backport
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabp"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary"

}
